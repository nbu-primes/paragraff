@model IEnumerable<CategoryViewModel>

<h2>EditCategories</h2>

<br />

@using (Ajax.BeginForm("AddCategory", "Category", new { area = "Admin" },
                        new AjaxOptions
                        {
                            HttpMethod = "POST",
                            OnSuccess = "onAddCategorySuccess(data)"
                        }, new { @id = "add-category-form" }))
{
    @Html.AntiForgeryToken()
    <input type="text" name="name" id="category-text" placeholder="category" />

    <button id="add-category" class="btn btn-success">
        <i class="icon icon-plus"></i> Add
    </button>
}

<br />
<br />

<div id="category-container">
    @foreach (var category in Model)
    {
        <span class="tag label label-info">
            <span class="category-name">@category.CategoryName</span>
            @*<a><i id="@category.Id" class="remove-category remove icon-remove"></i></a>*@
            @*@Ajax.RawActionLink(string.Format("<i id='@category.Id' class='remove-category remove icon-remove'></i>"), "DeleteCategory", "Category", new { area = "Admin" }, new AjaxOptions { HttpMethod = "Post" }, new { @class = "" })*@
            @using (Ajax.BeginForm("ToggleActivity", "Category", new { area = "Admin", id = category.Id },
                            new AjaxOptions
                            {
                                HttpMethod = "Post",
                                OnSuccess = "onToggleActivitySuccess"
                            }, new { @id = "deactivate-category-form", @class = "inline" }))
            {
                @Html.AntiForgeryToken()
                <input type="hidden" name="categoryId" value="@category.Id" />

              
                <button id="toggle-activity" data-activated="@(category.IsActive)" class="@(category.IsActive ? "btn btn-success" : "btn btn-warning")">
                    <i class="@(category.IsActive ? "icon-check" : "icon-book")"></i>
                </button>
            }

            @using (Ajax.BeginForm("DeleteCategory", "Category", new { area = "Admin" },
                            new AjaxOptions
                            {
                                HttpMethod = "Post",
                                OnSuccess = "onDeletionSuccess"
                            }, new { @id = "delete-category-form", @class = "inline" }))
            {
                @Html.AntiForgeryToken()
                <input type="hidden" name="categoryId" value="@category.Id" />
                <button id="delete-category" @*type="submit"*@ class="btn btn-danger">
                    <i class="icon-remove"></i>
                </button>

            }
        </span>
    }
</div>

@Scripts.Render("~/bundles/gritter")

<script>
    function onDeletionSuccess() {
        let el = $(this).parent();
        console.log(el.children("span.category-name").html());
        let categoryName = el.children("span.category-name").html();
        $.gritter.add({
            title: 'Removed',
            text: 'You have successfully deleted ' + categoryName.toUpperCase(),
            image: '../Content/MatrixTheme/img/Delete_Icon.png',
            sticky: false
        });
        el.remove();
    }
    // toggle category activation client side instead of fetching the data form server
    function onToggleActivitySuccess() {
        let el = $(this);
        let categoryName = el.siblings("span.category-name").html()
        console.log(categoryName);
        let btn = el.children("#toggle-activity");
        let isActive = btn.attr("data-activated").toLowerCase() === 'true';
        if (isActive) {
            btn.attr("data-activated", "false")
        } else {
            btn.attr("data-activated", "true")

        }

        btn.toggleClass('btn-success');
        btn.toggleClass('btn-warning');

        btn.children("i").toggleClass('icon-check')
        btn.children("i").toggleClass('icon-book')

        $.gritter.add({
            title: isActive ? 'Deactivated' : "Activated",
            text: categoryName.toUpperCase() + (isActive ? ' was successfully deactivated' : ' was successfully activated'),
            image: isActive ? '../Content/MatrixTheme/img/archive_icon.png' : '../Content/MatrixTheme/img/active_icon.png',
            sticky: false,
            class_name: 'orange-bg'
        })
    }

    function onAddCategorySuccess(data) {
        console.log(data);
        $.gritter.add({
            title: 'Added',
            text: "Successfully added",
            image: '../Content/MatrixTheme/img/Add_Icon.png',
            sticky: false,
            class_name: 'gritter-green'
        });
        $("#admin-container").html(data);

        // after creation fetch the new categories
        //$.get("category/editcategories", function (data) {
        //    console.log("rdy");
        //    $("#admin-container").html(data);
        //});
    }

        //$("#add-category").off("click").on("click", function () {
        //    let categoryToDelete = $(this).siblings("input#category-text").val();
        //    if (confirm(`Are you sure you want to add ${categoryToDelete.toUpperCase()} ?`)) {
        //        $("#add-category-form").submit(); // Submitting the form if user clicks OK
        //    }
        //    return false;

        //});

        //$("#delete-category").on("click", function () {
        //    let categoryToDelete = $(this).parent().siblings("span.category-name").html();
        //    if (confirm(`Are you sure you want to delete ${categoryToDelete.toUpperCase()} ?`)) {
        //        $("#delete-category-form").submit(); // Submitting the form if user clicks OK
        //    }
        //    return false;
        //})

</script>
